<h1>My first steps in natural language processing: converting a sentence to a conceptual graph</h1>

<h2>Abstract</h2>

<p>
The article describes my small experiment: extracting information as a conceptual graph from a phrase in natural language.
</p> 

<p>
This will allow me to manage the game character by voice or text messages. 
</p>

<p>
The obtained results are a good basis for me for achieving some practical results in the future. 
But they are not yet suitable for practical using right now.
</p>

<h2>Background</h2>
<p>
During the increased interest to AI in the society, I also wanted to try to do something in this direction. 
Using it in games seemed as evident to me. 
I have gotten an idea: to make a simple scene in Unity 3d by standard assets and try to write a simple AI for the scene. 
The examples of game logic (which i saw) were pretty much spaghetti code in C#. 
These rules in that code was a very simple and far from intelligence. 
</p>

<p>
On the one hand, it is understandable: players want a lot of stupid "meat" for destroying it. 
And in this case a game does not require an expensive and high-performance device.
</p>

<p>
At the same time, it disappointed me: where are the achievements in the area of AI. 
In addition, in real games, the dullness of the characters is compensated by an excellent art. 
I am only able to program. 
And I do not have many opportunities for getting a such art. 
I have an interest in voice control of the character. 
Also it seemed to me as interesting to use documents in the natural language at economic and political simulators.
</p>

<p>
I quickly made a choice for a symbolic approach and for a system which is based on explicit rules. 
It allows to clearly define a behavior of a character and to explain why this or that action was performed.
</p>

<p>
The feature that seemed me as very difficult and as very interesting: to convert a text in natural language to a machine-readable format. 
It is still difficult for me, because. But now I have an expandable basis.
</p>

<p>
I was looking for a ready-made solution, because writing such solution is complex and also it takes a lot of time.
I did not find a solution which suited for me. 
But controlling by natural language is a cool feature. 
I also have bought a book which briefly describes main stages of natural language processing. 
So I decided to try to convert at least one phrase by myself. 
My way for it and the result are described here.
</p>

<h2>Formulation of my task</h2>
<p>
I want to convert the sentence "I know the dog" to a conceptual graph. 
This task seems to me as small and it may be solved in a short time. 
This is only one phrase which contains only four words.
</p>

<h2>Making a phrase tree of target sentence</h2>
<p>
Firstly, I must make a phrase tree of target sentence. 
The sentence "I know the dog" should be transformed to a tree as in figure 1.
</p>

<figure>
<img src="https://metatypeman.github.io/articles/my_first_steps_in_natural_language_processing_type_hierarchy.jpg" alt="Figure 1. Phrase tree for sentence &quot;I know the dog&quot;">
<figcaption>Figure 1. Phrase tree for sentence &quot;I know the dog&quot;</figcaption>
</figure>

<p>
Initially, I planned to use a ready-made solution for this. 
The solutions for making a phrase tree were mainly based on Java. 
After some time, I had found a library in C#. 
She was installed easily and immediately gave me a result. 
However, this library did not always correctly process the sentences in Present Simple with the subject in the third person. 
So, the verb "likes" was defined as a noun in the phrase "She likes the dog".
</p>

<p>
I also planned to use words in the basic form and to label tense and aspect of the sentence as relations of conceptual graph. 
But I could not extract a basic form of the word by that library.
</p>

<p>
Also I need to assign a class (which represents some meaning) to the word. 
It required a separate dictionary and I had to write the dictionary manually.
</p>

<p>
I needed to look for another library. 
I did not have any wish to start searching again. 
So I decided to write a simple syntactic parser manually. 
I would be very grateful if anyone advise me a good ready-made solution.
</p>

<p>
At the same time, the previously used library normally divided a paragraph to separate sentences. 
So I left the library for this.
</p>

<p>
Firstly, I have written a lexical analyzer and I transformed text to list of tokens.
</p>

<p>
Then I started to make a phrase tree by a variant of ATN (augmented transition network).
</p>

<p>
At the moment I have finite-state machines for noun phrase, verb phrase and for sentence in general.
</p>

<p>
The finite-state machine for noun phrase can only recognize a noun and its determiner. 
In the future I plan to implement recognition of prepositional phrases, adjectives, numerals and other parts of speech.
</p>

<p>
The finite-state machine for verb phrase will be specific for each combination of time and aspect. 
So, I will also extract tense and aspect from parsed sentence. 
Now I can process present simple and past simple.
</p>

<p>
The finite-state machine of sentence takes noun phrase of subject and verb phrase and makes phrase tree of the sentence.
</p>

<p>
The syntactic parser uses a small dictionary (Figure 2). 
This dictionary contains basic grammatical information about the word. 
Also It contains a basic form of the word. Each word can be in relation to different parts of speech or to the same part of speech, but with a different grammatical meaning.
</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>

<p>

</p>
